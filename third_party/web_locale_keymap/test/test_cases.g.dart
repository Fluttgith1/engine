//---------------------------------------------------------------------------------------------
//  Copyright (c) 2022 Google LLC
//  Licensed under the MIT License. See License.txt in the project root for license information.
//--------------------------------------------------------------------------------------------*/

// DO NOT EDIT -- DO NOT EDIT -- DO NOT EDIT
//
// This file is auto generated by flutter/engine:flutter/tools/gen_web_keyboard_layouts based on
// https://github.com/microsoft/vscode/tree/@@@COMMIT_ID@@@/src/vs/workbench/services/keybinding/browser/keyboardLayouts
//
// Edit the following files instead:
//
//  - Script: lib/main.dart
//  - Templates: data/*.tmpl
//
// See flutter/engine:flutter/tools/gen_web_keyboard_layouts/README.md for more information.

import 'package:test/test.dart';
import 'package:web_locale_keymap/web_locale_keymap.dart';
import 'testing.dart';

void testWin(LayoutMapping mapping) {
  group('cz', () {
    verifyEntry(mapping, 'Digit0', <String>['é', '0', '˝', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['+', '1', '~', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['ě', '2', 'ˇ', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['š', '3', '^', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['č', '4', '˘', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['ř', '5', '°', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['ž', '6', '˛', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['ý', '7', '`', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['á', '8', '˙', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['í', '9', '´', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '{', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '&', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', 'Đ', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '[', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', ']', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'ł', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'Ł', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '}', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', r'\', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'đ', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '@', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '|', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '#', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['z', 'Z', '', ''], 'Z');
    verifyEntry(mapping, 'KeyZ', <String>['y', 'Y', '', ''], 'Y');
  });

  group('de', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '}', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '²', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '§', '³', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '{', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '[', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', ']', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '@', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['z', 'Z', '', ''], 'Z');
    verifyEntry(mapping, 'KeyZ', <String>['y', 'Y', '', ''], 'Y');
  });

  group('de-swiss', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '+', '¦', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '@', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '*', '#', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', 'ç', '°', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '§', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '¬', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '|', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '¢', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', '', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['z', 'Z', '', ''], 'Z');
    verifyEntry(mapping, 'KeyZ', <String>['y', 'Y', '', ''], 'Y');
  });

  group('dk', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '}', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '@', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', '¤', r'$', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '€', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '{', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '[', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', ']', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });

  group('en', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', '', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });

  group('en-belgian', () {
    verifyEntry(mapping, 'Digit0', <String>['à', '0', '}', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['&', '1', '|', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['é', '2', '@', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['"', '3', '#', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>["'", '4', '{', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['(', '5', '[', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['§', '6', '^', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['è', '7', '', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['!', '8', '', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['ç', '9', '{', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['z', 'Z', '', ''], 'Z');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'Semicolon', <String>['m', 'M', '', ''], 'M');
  });

  group('en-in', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '₹', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '', 'ˆ'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', '', '˘'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'ā', 'Ā'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', 'ḍ', 'Ḍ'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'ē', 'Ē'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', 'ṅ', 'Ṅ'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', 'ḥ', 'Ḥ'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'ī', 'Ī'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'l̥', 'L̥'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'ṁ', 'Ṁ'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'ṇ', 'Ṇ'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ō', 'Ō'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'æ', 'Æ'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', 'r̥', 'R̥'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ś', 'Ś'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', 'ṭ', 'Ṭ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'ū', 'Ū'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', 'ṣ', 'Ṣ'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', 'ñ', 'Ñ'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });

  group('en-intl', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', '’', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¡', '¹'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '²', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '³', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¤', '£'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '€', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '¼', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '½', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '¾', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', '‘', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'á', 'Á'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '©', '¢'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', 'ð', 'Ð'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'é', 'É'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'í', 'Í'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'ø', 'Ø'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'ñ', 'Ñ'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ó', 'Ó'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'ö', 'Ö'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'ä', 'Ä'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', '§'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', 'þ', 'Þ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'ú', 'Ú'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', 'å', 'Å'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', 'ü', 'Ü'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'æ', 'Æ'], 'Z');
  });

  group('en-uk', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '£', '', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '€', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', '', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'á', 'Á'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'é', 'É'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'í', 'Í'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ó', 'Ó'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'ú', 'Ú'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });

  group('es', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '|', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '@', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '·', '#', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '~', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '€', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '¬', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', '', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });

  group('es-latin', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', '', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '@', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });

  group('fr', () {
    verifyEntry(mapping, 'Digit0', <String>['à', '0', '@', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['&', '1', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['é', '2', '~', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['"', '3', '#', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>["'", '4', '{', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['(', '5', '[', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['-', '6', '|', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['è', '7', '`', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['_', '8', r'\', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['ç', '9', '^', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['z', 'Z', '', ''], 'Z');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'Semicolon', <String>['m', 'M', '', ''], 'M');
  });

  group('hu', () {
    verifyEntry(mapping, 'Backquote', <String>['0', '§', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', "'", '~', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', 'ˇ', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '+', '^', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', '!', '˘', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '°', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '/', '˛', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '=', '`', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '˙', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', '´', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'ä', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '{', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '&', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', 'Đ', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'Ä', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '[', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', ']', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'Í', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', 'í', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'ł', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'Ł', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '<', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '}', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', r'\', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'đ', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '€', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '@', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '|', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '#', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['z', 'Z', '', ''], 'Z');
    verifyEntry(mapping, 'KeyZ', <String>['y', 'Y', '>', ''], 'Y');
  });

  group('it', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '£', '', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '€', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', '', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });

  group('no', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '}', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '@', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', '¤', r'$', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '€', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '{', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '[', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', ']', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });

  group('pl', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', '', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'ą', 'Ą'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'ć', 'Ć'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'ę', 'Ę'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'ł', 'Ł'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'ń', 'Ń'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ó', 'Ó'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ś', 'Ś'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '€', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', 'ź', 'Ź'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'ż', 'Ż'], 'Z');
  });

  group('pt', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '}', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '@', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '§', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '€', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '{', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '[', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', ']', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });

  group('pt-br', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¹', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '²', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '³', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '£', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '¢', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '¨', '¬', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', '', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '₢', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '°', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '/', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '?', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });

  group('ru', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '№', '', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', ';', '', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', ':', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '?', '', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '₽', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', '', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['ф', 'Ф', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['и', 'И', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['с', 'С', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['в', 'В', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['у', 'У', '', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['а', 'А', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['п', 'П', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['р', 'Р', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['ш', 'Ш', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['о', 'О', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['л', 'Л', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['д', 'Д', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['ь', 'Ь', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['т', 'Т', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['щ', 'Щ', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['з', 'З', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['й', 'Й', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['к', 'К', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['ы', 'Ы', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['е', 'Е', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['г', 'Г', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['м', 'М', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['ц', 'Ц', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['ч', 'Ч', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['н', 'Н', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['я', 'Я', '', ''], 'Z');
  });

  group('sv', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '}', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '@', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', '¤', r'$', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '€', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '{', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '[', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', ']', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });

  group('thai', () {
    verifyEntry(mapping, 'Digit0', <String>['จ', '๗', '', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['ๅ', '+', '', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['/', '๑', '', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['-', '๒', '', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['ภ', '๓', '', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['ถ', '๔', '', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['ุ', 'ู', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['ึ', '฿', '', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['ค', '๕', '', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['ต', '๖', '', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['ฟ', 'ฤ', '', ''], 'A');
    verifyEntry(mapping, 'KeyB', <String>['ิ', 'ฺ', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['แ', 'ฉ', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['ก', 'ฏ', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['ำ', 'ฎ', '', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['ด', 'โ', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['เ', 'ฌ', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['้', '็', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['ร', 'ณ', '', ''], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['่', '๋', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['า', 'ษ', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['ส', 'ศ', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['ท', '?', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['ื', '์', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['น', 'ฯ', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['ย', 'ญ', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['ๆ', '๐', '', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['พ', 'ฑ', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['ห', 'ฆ', '', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['ะ', 'ธ', '', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['ี', '๊', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['อ', 'ฮ', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['ไ', '"', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['ป', ')', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['ั', 'ํ', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['ผ', '(', '', ''], 'Z');
  });

  group('tr', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '}', ''], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '>', ''], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', "'", '£', ''], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '^', '#', ''], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', '+', r'$', ''], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '½', ''], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '', ''], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '{', ''], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '[', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', ']', ''], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'æ', 'Æ'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '', ''], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '', ''], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', ''], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', '', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', ''], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '', ''], 'H');
    verifyEntry(mapping, 'KeyI', <String>['ı', 'I', 'i', 'İ'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '', ''], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '', ''], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '', ''], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '', ''], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', '', ''], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', '', ''], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '@', ''], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '', ''], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '₺', ''], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '', ''], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '', ''], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '', ''], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '', ''], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '', ''], 'Z');
  });
}

void testLinux(LayoutMapping mapping) {
  group('de', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '}', '°'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¹', '¡'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '²', '⅛'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '§', '³', '£'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¼', '¤'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '½', '⅜'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '¬', '⅝'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '{', '⅞'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '[', '™'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', ']', '±'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'æ', 'Æ'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '“', '‘'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '¢', '©'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', 'ð', 'Ð'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', '€'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'đ', 'ª'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', 'ŋ', 'Ŋ'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', 'ħ', 'Ħ'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '→', 'ı'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '̣', '̇'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'ĸ', '&'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'ł', 'Ł'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', 'º'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '”', '’'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'þ', 'Þ'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '@', 'Ω'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '¶', '®'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ſ', 'ẞ'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', 'ŧ', 'Ŧ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '↓', '↑'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '„', '‚'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', 'ł', 'Ł'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '«', '‹'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['z', 'Z', '←', '¥'], 'Z');
    verifyEntry(mapping, 'KeyZ', <String>['y', 'Y', '»', '›'], 'Y');
  });

  group('en', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', '0', ')'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '1', '!'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '2', '@'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '3', '#'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '4', r'$'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '5', '%'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '6', '^'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '7', '&'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '8', '*'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', '9', '('], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'a', 'A'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', 'b', 'B'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'c', 'C'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', 'd', 'D'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'e', 'E'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'f', 'F'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', 'g', 'G'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', 'h', 'H'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'i', 'I'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', 'j', 'J'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'k', 'K'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'l', 'L'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'm', 'M'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'n', 'N'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'o', 'O'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'p', 'P'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'q', 'Q'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', 'r', 'R'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 's', 'S'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', 't', 'T'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'u', 'U'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', 'v', 'V'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', 'w', 'W'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', 'x', 'X'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', 'y', 'Y'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'z', 'Z'], 'Z');
  });

  group('es', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '}', '°'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '|', '¡'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '@', '⅛'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '·', '#', '£'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '~', r'$'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '½', '⅜'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '¬', '⅝'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '{', '⅞'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '[', '™'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', ']', '±'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'æ', 'Æ'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '”', '’'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '¢', '©'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', 'ð', 'Ð'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', '¢'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'đ', 'ª'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', 'ŋ', 'Ŋ'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', 'ħ', 'Ħ'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '→', 'ı'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '̉', '̛'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'ĸ', '&'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'ł', 'Ł'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', 'º'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'n', 'N'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'þ', 'Þ'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '@', 'Ω'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '¶', '®'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', '§'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', 'ŧ', 'Ŧ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '↓', '↑'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '“', '‘'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', 'ł', 'Ł'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '»', '>'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '←', '¥'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '«', '<'], 'Z');
  });

  group('fr', () {
    verifyEntry(mapping, 'Digit0', <String>['à', '0', '@', '°'], '0');
    verifyEntry(mapping, 'Digit1', <String>['&', '1', '¹', '¡'], '1');
    verifyEntry(mapping, 'Digit2', <String>['é', '2', '~', '⅛'], '2');
    verifyEntry(mapping, 'Digit3', <String>['"', '3', '#', '£'], '3');
    verifyEntry(mapping, 'Digit4', <String>["'", '4', '{', r'$'], '4');
    verifyEntry(mapping, 'Digit5', <String>['(', '5', '[', '⅜'], '5');
    verifyEntry(mapping, 'Digit6', <String>['-', '6', '|', '⅝'], '6');
    verifyEntry(mapping, 'Digit7', <String>['è', '7', '`', '⅞'], '7');
    verifyEntry(mapping, 'Digit8', <String>['_', '8', r'\', '™'], '8');
    verifyEntry(mapping, 'Digit9', <String>['ç', '9', '^', '±'], '9');
    verifyEntry(mapping, 'KeyA', <String>['q', 'Q', '@', 'Ω'], 'Q');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '”', '’'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '¢', '©'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', 'ð', 'Ð'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', '¢'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'đ', 'ª'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', 'ŋ', 'Ŋ'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', 'ħ', 'Ħ'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '→', 'ı'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '̉', '̛'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'ĸ', '&'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'ł', 'Ł'], 'L');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'n', 'N'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'þ', 'Þ'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['a', 'A', 'æ', 'Æ'], 'A');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '¶', '®'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', '§'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', 'ŧ', 'Ŧ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', '↓', '↑'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '“', '‘'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['z', 'Z', '«', '<'], 'Z');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '»', '>'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '←', '¥'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['w', 'W', 'ł', 'Ł'], 'W');
    verifyEntry(mapping, 'Semicolon', <String>['m', 'M', 'µ', 'º'], 'M');
  });

  group('ru', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', '0', ')'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '1', '!'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '2', '"'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '№', '3', '№'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', ';', '4', ';'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '5', '%'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', ':', '6', ':'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '?', '7', '?'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '₽', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', '9', '('], '9');
    verifyEntry(mapping, 'KeyA', <String>['ф', 'Ф', 'ф', 'Ф'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['и', 'И', 'и', 'И'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['с', 'С', 'с', 'С'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['в', 'В', 'в', 'В'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['у', 'У', 'у', 'У'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['а', 'А', 'а', 'А'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['п', 'П', 'п', 'П'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['р', 'Р', 'р', 'Р'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['ш', 'Ш', 'ш', 'Ш'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['о', 'О', 'о', 'О'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['л', 'Л', 'л', 'Л'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['д', 'Д', 'д', 'Д'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['ь', 'Ь', 'ь', 'Ь'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['т', 'Т', 'т', 'Т'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['щ', 'Щ', 'щ', 'Щ'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['з', 'З', 'з', 'З'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['й', 'Й', 'й', 'Й'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['к', 'К', 'к', 'К'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['ы', 'Ы', 'ы', 'Ы'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['е', 'Е', 'е', 'Е'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['г', 'Г', 'г', 'Г'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['м', 'М', 'м', 'М'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['ц', 'Ц', 'ц', 'Ц'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['ч', 'Ч', 'ч', 'Ч'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['н', 'Н', 'н', 'Н'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['я', 'Я', 'я', 'Я'], 'Z');
  });
}

void testDarwin(LayoutMapping mapping) {
  group('de', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '≠', '¯'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¡', '¬'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '“', '”'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '§', '¶', '#'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¢', '£'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '[', 'ﬁ'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', ']', 'Dead'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '|', r'\'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '{', '˜'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', '}', '·'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'å', 'Å'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '∫', '‹'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'ç', 'Ç'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', '™'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', '‰'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', 'Ï'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '©', 'Ì'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', 'ª', 'Ó'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', '⁄', 'Û'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', 'º', 'ı'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '∆', 'ˆ'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '@', 'ﬂ'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', '˘'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'Dead', '›'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '«', '»'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', '¸'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '‚', 'Í'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '†', '˝'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'Dead', 'Á'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '√', '◊'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '∑', '„'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '≈', 'Ù'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['z', 'Z', 'Ω', 'ˇ'], 'Z');
    verifyEntry(mapping, 'KeyZ', <String>['y', 'Y', '¥', '‡'], 'Y');
  });

  group('dvorak', () {
    verifyEntry(mapping, 'Comma', <String>['w', 'W', '∑', '„'], 'W');
    verifyEntry(mapping, 'Digit0', <String>['0', ')', 'º', '‚'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¡', '⁄'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '™', '€'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', '‹'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¢', '›'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '∞', 'ﬁ'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '§', 'ﬂ'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '¶', '‡'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '•', '°'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', 'ª', '·'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'å', 'Å'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['x', 'X', '≈', '˛'], 'X');
    verifyEntry(mapping, 'KeyC', <String>['j', 'J', '∆', 'Ô'], 'J');
    verifyEntry(mapping, 'KeyD', <String>['e', 'E', 'Dead', '´'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['u', 'U', 'Dead', '¨'], 'U');
    verifyEntry(mapping, 'KeyG', <String>['i', 'I', 'Dead', 'ˆ'], 'I');
    verifyEntry(mapping, 'KeyH', <String>['d', 'D', '∂', 'Î'], 'D');
    verifyEntry(mapping, 'KeyI', <String>['c', 'C', 'ç', 'Ç'], 'C');
    verifyEntry(mapping, 'KeyJ', <String>['h', 'H', '˙', 'Ó'], 'H');
    verifyEntry(mapping, 'KeyK', <String>['t', 'T', '†', 'ˇ'], 'T');
    verifyEntry(mapping, 'KeyL', <String>['n', 'N', 'Dead', '˜'], 'N');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', 'Â'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['b', 'B', '∫', 'ı'], 'B');
    verifyEntry(mapping, 'KeyO', <String>['r', 'R', '®', '‰'], 'R');
    verifyEntry(mapping, 'KeyP', <String>['l', 'L', '¬', 'Ò'], 'L');
    verifyEntry(mapping, 'KeyR', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyS', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyT', <String>['y', 'Y', '¥', 'Á'], 'Y');
    verifyEntry(mapping, 'KeyU', <String>['g', 'G', '©', '˝'], 'G');
    verifyEntry(mapping, 'KeyV', <String>['k', 'K', '˚', ''], 'K');
    verifyEntry(mapping, 'KeyX', <String>['q', 'Q', 'œ', 'Œ'], 'Q');
    verifyEntry(mapping, 'KeyY', <String>['f', 'F', 'ƒ', 'Ï'], 'F');
    verifyEntry(mapping, 'Period', <String>['v', 'V', '√', '◊'], 'V');
    verifyEntry(mapping, 'Semicolon', <String>['s', 'S', 'ß', 'Í'], 'S');
    verifyEntry(mapping, 'Slash', <String>['z', 'Z', 'Ω', '¸'], 'Z');
  });

  group('en', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', 'º', '‚'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¡', '⁄'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '™', '€'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', '‹'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¢', '›'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '∞', 'ﬁ'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '§', 'ﬂ'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '¶', '‡'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '•', '°'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', 'ª', '·'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'å', 'Å'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '∫', 'ı'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'ç', 'Ç'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', 'Î'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'Dead', '´'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', 'Ï'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '©', '˝'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '˙', 'Ó'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'Dead', 'ˆ'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '∆', 'Ô'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '˚', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '¬', 'Ò'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', 'Â'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'Dead', '˜'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'œ', 'Œ'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', '‰'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', 'Í'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '†', 'ˇ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'Dead', '¨'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '√', '◊'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '∑', '„'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '≈', '˛'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '¥', 'Á'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'Ω', '¸'], 'Z');
  });

  group('en-ext', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', 'º', '‚'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¡', '⁄'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '™', '€'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', '‹'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¢', '›'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '§', '†'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', 'Dead', '̂'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '¶', '‡'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '•', '°'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', 'ª', '·'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'Dead', '̄'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', 'Dead', '̆'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'Dead', '̧'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', 'ð', 'Ð'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'Dead', '́'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '©', 'Dead'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', 'Dead', '̱'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'Dead', '̛'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', 'Dead', '̋'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'Dead', '̊'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'Dead', '̵'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'Dead', '̨'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'Dead', '̃'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'Dead', '̦'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'œ', 'Œ'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', '‰'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', 'þ', 'Þ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'Dead', '̈'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', 'Dead', '̌'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', 'Dead', '̇'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', 'Dead', '̣'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '¥', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'Dead', '̉'], 'Z');
  });

  group('en-intl', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', 'º', '‚'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¡', '⁄'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '™', '€'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', '‹'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¢', '›'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '∞', 'ﬁ'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', 'Dead', '§', 'ﬂ'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '¶', '‡'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '•', '°'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', 'ª', '·'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'å', 'Å'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '∫', 'ı'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'ç', 'Ç'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', 'Î'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'Dead', '´'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', 'Ï'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '©', '˝'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '˙', 'Ó'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'Dead', 'ˆ'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '∆', 'Ô'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '˚', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '¬', 'Ò'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', 'Â'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'Dead', '˜'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'œ', 'Œ'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', '‰'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', 'Í'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '†', 'ˇ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'Dead', '¨'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '√', '◊'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '∑', '„'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '≈', '˛'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '¥', 'Á'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'Ω', '¸'], 'Z');
  });

  group('en-uk', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', 'º', '‚'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¡', '⁄'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '€', '™'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '£', '#', '‹'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¢', '›'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '∞', 'ﬁ'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '§', 'ﬂ'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '¶', '‡'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '•', '°'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', 'ª', '·'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'å', 'Å'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '∫', 'ı'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'ç', 'Ç'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', 'Î'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'Dead', '‰'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', 'Ï'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '©', 'Ì'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '˙', 'Ó'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'Dead', 'È'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '∆', 'Ô'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '˚', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '¬', 'Ò'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', '˜'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'Dead', 'ˆ'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'œ', 'Œ'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', 'Â'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', 'Í'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '†', 'Ê'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'Dead', 'Ë'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '√', '◊'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '∑', '„'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '≈', 'Ù'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '¥', 'Á'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'Ω', 'Û'], 'Z');
  });

  group('es', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '≠', '≈'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '|', 'ı'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '@', '˝'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '·', '#', '•'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¢', '£'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '∞', '‰'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '¬', ' '], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '÷', '⁄'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '“', '‘'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', '”', '’'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'å', 'Å'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', 'ß', ''], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '©', ' '], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', '∆'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', '€'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', 'ﬁ'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '', 'ﬂ'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '™', ' '], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', ' ', ' '], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '¶', '¯'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '§', 'ˇ'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', ' ', '˘'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', '˚'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', ' ', '˙'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'œ', 'Œ'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', ' '], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', '∫', ' '], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '†', '‡'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', ' ', ' '], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '√', '◊'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', 'æ', 'Æ'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '∑', '›'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '¥', ' '], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'Ω', '‹'], 'Z');
  });

  group('fr', () {
    verifyEntry(mapping, 'Digit0', <String>['à', '0', 'ø', 'Ø'], '0');
    verifyEntry(mapping, 'Digit1', <String>['&', '1', '', 'Dead'], '1');
    verifyEntry(mapping, 'Digit2', <String>['é', '2', 'ë', '„'], '2');
    verifyEntry(mapping, 'Digit3', <String>['"', '3', '“', '”'], '3');
    verifyEntry(mapping, 'Digit4', <String>["'", '4', '‘', '’'], '4');
    verifyEntry(mapping, 'Digit5', <String>['(', '5', '{', '['], '5');
    verifyEntry(mapping, 'Digit6', <String>['§', '6', '¶', 'å'], '6');
    verifyEntry(mapping, 'Digit7', <String>['è', '7', '«', '»'], '7');
    verifyEntry(mapping, 'Digit8', <String>['!', '8', '¡', 'Û'], '8');
    verifyEntry(mapping, 'Digit9', <String>['ç', '9', 'Ç', 'Á'], '9');
    verifyEntry(mapping, 'KeyA', <String>['q', 'Q', '‡', 'Ω'], 'Q');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', 'ß', '∫'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '©', '¢'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', '∆'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'ê', 'Ê'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', '·'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', 'ﬁ', 'ﬂ'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', 'Ì', 'Î'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'î', 'ï'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', 'Ï', 'Í'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'È', 'Ë'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '¬', '|'], 'L');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'Dead', 'ı'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'œ', 'Œ'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['a', 'A', 'æ', 'Æ'], 'A');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', '‚'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'Ò', '∑'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '†', '™'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'º', 'ª'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '◊', '√'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['z', 'Z', 'Â', 'Å'], 'Z');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '≈', '⁄'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', 'Ú', 'Ÿ'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['w', 'W', '‹', '›'], 'W');
    verifyEntry(mapping, 'Semicolon', <String>['m', 'M', 'µ', 'Ó'], 'M');
  });

  group('it', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '≠', '≈'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '«', '»'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '“', '”'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '£', '‘', '’'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¥', '¢'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '~', '‰'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '‹', '›'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '÷', '⁄'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', 'Dead', ''], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', 'Dead', ' '], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'å', 'Å'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '∫', 'Í'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', '©', 'Á'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', '˘'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', '€', 'È'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', '˙'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '∞', '˚'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '∆', '¸'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'œ', 'Œ'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', 'ª', '˝'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'º', '˛'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '¬', 'ˇ'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', 'Ú'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'Dead', 'Ó'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '„', '‚'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', 'Ì'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', '¯'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '™', 'Ò'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'Dead', 'Ù'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '√', 'É'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', 'Ω', 'À'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '†', '‡'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', 'æ', 'Æ'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '∑', ' '], 'Z');
  });

  group('jp', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', 'º', '‚'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¡', '⁄'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '™', '€'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', '‹'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¢', '›'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '∞', 'ﬁ'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '§', 'ﬂ'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '¶', '‡'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '•', '°'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', 'ª', '·'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'å', 'Å'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '∫', 'ı'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'ç', 'Ç'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', 'Î'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'Dead', '´'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', 'Ï'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '©', '˝'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '˙', 'Ó'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'Dead', 'ˆ'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '∆', 'Ô'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '˚', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '¬', 'Ò'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', 'Â'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'Dead', '˜'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'œ', 'Œ'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', '‰'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', 'Í'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '†', 'ˇ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'Dead', '¨'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '√', '◊'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '∑', '„'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '≈', '˛'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '¥', 'Á'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'Ω', '¸'], 'Z');
  });

  group('jp-roman', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', 'º', '‚'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¡', '⁄'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '™', '€'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', '‹'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¢', '›'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '§', '†'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', 'Dead', '̂'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '¶', '‡'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '•', '°'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', 'ª', '·'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'Dead', '̄'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', 'Dead', '̆'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'Dead', '̧'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', 'ð', 'Ð'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'Dead', '́'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', ''], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '©', 'Dead'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', 'Dead', '̱'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'Dead', '̛'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', 'Dead', '̋'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'Dead', '̊'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'Dead', '̵'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'Dead', '̨'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'Dead', '̃'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'Dead', '̦'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'œ', 'Œ'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', '‰'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', ''], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', 'þ', 'Þ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'Dead', '̈'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', 'Dead', '̌'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', 'Dead', '̇'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', 'Dead', '̣'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '¥', ''], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'Dead', '̉'], 'Z');
  });

  group('ko', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', '0', ')'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '1', '!'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '2', '@'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '3', '#'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '4', r'$'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '5', '%'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '6', '^'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '7', '&'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '8', '*'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', '9', '('], '9');
    verifyEntry(mapping, 'KeyA', <String>['ㅁ', 'ㅁ', 'a', 'A'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['ㅠ', 'ㅠ', 'b', 'B'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['ㅊ', 'ㅊ', 'c', 'C'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['ㅇ', 'ㅇ', 'd', 'D'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['ㄷ', 'ㄸ', 'e', 'E'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['ㄹ', 'ㄹ', 'f', 'F'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['ㅎ', 'ㅎ', 'g', 'G'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['ㅗ', 'ㅗ', 'h', 'H'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['ㅑ', 'ㅑ', 'i', 'I'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['ㅓ', 'ㅓ', 'j', 'J'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['ㅏ', 'ㅏ', 'k', 'K'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['ㅣ', 'ㅣ', 'l', 'L'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['ㅡ', 'ㅡ', 'm', 'M'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['ㅜ', 'ㅜ', 'n', 'N'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['ㅐ', 'ㅒ', 'o', 'O'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['ㅔ', 'ㅖ', 'p', 'P'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['ㅂ', 'ㅃ', 'q', 'Q'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['ㄱ', 'ㄲ', 'r', 'R'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['ㄴ', 'ㄴ', 's', 'S'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['ㅅ', 'ㅆ', 't', 'T'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['ㅕ', 'ㅕ', 'u', 'U'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['ㅍ', 'ㅍ', 'v', 'V'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['ㅈ', 'ㅉ', 'w', 'W'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['ㅌ', 'ㅌ', 'x', 'X'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['ㅛ', 'ㅛ', 'y', 'Y'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['ㅋ', 'ㅋ', 'z', 'Z'], 'Z');
  });

  group('pl', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', 'ľ', '‚'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', 'Ń', 'ŕ'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '™', 'Ř'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '€', '‹'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', 'ß', '›'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', 'į', 'ř'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '^', '§', 'Ŗ'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '¶', 'ŗ'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '•', '°'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', 'Ľ', 'Š'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'ą', 'Ą'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', 'ļ', 'ű'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'ć', 'Ć'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', 'Ž'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'ę', 'Ę'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ń', 'ž'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '©', 'Ū'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', 'ķ', 'Ó'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'Dead', 'ť'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '∆', 'Ô'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'Ż', 'ū'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'ł', 'Ł'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'Ķ', 'ų'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'ń', 'Ń'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ó', 'Ó'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'Ļ', 'ł'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'Ō', 'ő'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', '£'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ś', 'Ś'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '†', 'ś'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'Dead', 'Ť'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '√', '◊'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '∑', '„'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', 'ź', 'Ź'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', 'ī', 'Á'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'ż', 'Ż'], 'Z');
  });

  group('pt', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', 'º', '‚'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '¡', '⁄'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '™', '€'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', '‹'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', r'$', '¢', '›'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '∞', 'ﬁ'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', 'Dead', '§', 'ﬂ'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '¶', '‡'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '•', '°'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', 'ª', '·'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'å', 'Å'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '∫', 'ı'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'ç', 'Ç'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', 'Î'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'Dead', '´'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', 'Ï'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '©', '˝'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '˙', 'Ó'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'Dead', 'ˆ'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '∆', 'Ô'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '˚', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '¬', 'Ò'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', 'Â'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'Dead', '˜'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'œ', 'Œ'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', '‰'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', 'Í'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '†', 'ˇ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'Dead', '¨'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '√', '◊'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '∑', '„'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '≈', '˛'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '¥', 'Á'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'Ω', '¸'], 'Z');
  });

  group('ru', () {
    verifyEntry(mapping, 'Digit0', <String>['0', ')', '}', '`'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '!', '|'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '@', '"'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '№', '#', '£'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', '%', r'$', '€'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', ':', '%', '∞'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', ',', '^', '¬'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '.', '&', '¶'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', ';', '*', '√'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '(', '{', "'"], '9');
    verifyEntry(mapping, 'KeyA', <String>['ф', 'Ф', 'ƒ', 'ƒ'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['и', 'И', 'и', 'И'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['с', 'С', '≠', '≠'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['в', 'В', 'ћ', 'Ћ'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['у', 'У', 'ќ', 'Ќ'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['а', 'А', '÷', '÷'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['п', 'П', '©', '©'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['р', 'Р', '₽', '₽'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['ш', 'Ш', 'ѕ', 'Ѕ'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['о', 'О', '°', '•'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['л', 'Л', 'љ', 'Љ'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['д', 'Д', '∆', '∆'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['ь', 'Ь', '~', '~'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['т', 'Т', '™', '™'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['щ', 'Щ', 'ў', 'Ў'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['з', 'З', '‘', '’'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['й', 'Й', 'ј', 'Ј'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['к', 'К', '®', '®'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['ы', 'Ы', 'ы', 'Ы'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['е', 'Е', '†', '†'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['г', 'Г', 'ѓ', 'Ѓ'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['м', 'М', 'µ', 'µ'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['ц', 'Ц', 'џ', 'Џ'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['ч', 'Ч', '≈', '≈'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['н', 'Н', 'њ', 'Њ'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['я', 'Я', 'ђ', 'Ђ'], 'Z');
  });

  group('sv', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '=', '≈', '≠'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '!', '©', '¡'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '"', '@', '”'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', '¥'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', '€', r'$', '¢'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '∞', '‰'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '&', '§', '¶'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '/', '|', r'\'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '(', '[', '{'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', ')', ']', '}'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', '', '◊'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '›', '»'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'ç', 'Ç'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', '∆'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'é', 'É'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', '∫'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '¸', '¯'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '˛', '˘'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'ı', 'ˆ'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '√', '¬'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', 'ª', 'º'], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', 'ﬁ', 'ﬂ'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', '’', '”'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', '‘', '“'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'œ', 'Œ'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', '•', '°'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', '√'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', '∑'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '†', '‡'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'ü', 'Ü'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '‹', '«'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', 'Ω', '˝'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '≈', 'ˇ'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', 'µ', '˜'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', '÷', '⁄'], 'Z');
  });

  group('zh-hans', () {
    verifyEntry(mapping, 'Digit0', <String>['0', '）', 'º', '‚'], '0');
    verifyEntry(mapping, 'Digit1', <String>['1', '！', '¡', '⁄'], '1');
    verifyEntry(mapping, 'Digit2', <String>['2', '@', '™', '€'], '2');
    verifyEntry(mapping, 'Digit3', <String>['3', '#', '£', '‹'], '3');
    verifyEntry(mapping, 'Digit4', <String>['4', '¥', '¢', '›'], '4');
    verifyEntry(mapping, 'Digit5', <String>['5', '%', '∞', 'ﬁ'], '5');
    verifyEntry(mapping, 'Digit6', <String>['6', '', '§', 'ﬂ'], '6');
    verifyEntry(mapping, 'Digit7', <String>['7', '&', '¶', '‡'], '7');
    verifyEntry(mapping, 'Digit8', <String>['8', '*', '•', '°'], '8');
    verifyEntry(mapping, 'Digit9', <String>['9', '（', 'ª', '·'], '9');
    verifyEntry(mapping, 'KeyA', <String>['a', 'A', 'å', 'Å'], 'A');
    verifyEntry(mapping, 'KeyB', <String>['b', 'B', '∫', 'ı'], 'B');
    verifyEntry(mapping, 'KeyC', <String>['c', 'C', 'ç', 'Ç'], 'C');
    verifyEntry(mapping, 'KeyD', <String>['d', 'D', '∂', 'Î'], 'D');
    verifyEntry(mapping, 'KeyE', <String>['e', 'E', 'Dead', '´'], 'E');
    verifyEntry(mapping, 'KeyF', <String>['f', 'F', 'ƒ', 'Ï'], 'F');
    verifyEntry(mapping, 'KeyG', <String>['g', 'G', '©', '˝'], 'G');
    verifyEntry(mapping, 'KeyH', <String>['h', 'H', '˙', 'Ó'], 'H');
    verifyEntry(mapping, 'KeyI', <String>['i', 'I', 'Dead', 'ˆ'], 'I');
    verifyEntry(mapping, 'KeyJ', <String>['j', 'J', '∆', 'Ô'], 'J');
    verifyEntry(mapping, 'KeyK', <String>['k', 'K', '˚', ''], 'K');
    verifyEntry(mapping, 'KeyL', <String>['l', 'L', '¬', 'Ò'], 'L');
    verifyEntry(mapping, 'KeyM', <String>['m', 'M', 'µ', 'Â'], 'M');
    verifyEntry(mapping, 'KeyN', <String>['n', 'N', 'Dead', '˜'], 'N');
    verifyEntry(mapping, 'KeyO', <String>['o', 'O', 'ø', 'Ø'], 'O');
    verifyEntry(mapping, 'KeyP', <String>['p', 'P', 'π', '∏'], 'P');
    verifyEntry(mapping, 'KeyQ', <String>['q', 'Q', 'œ', 'Œ'], 'Q');
    verifyEntry(mapping, 'KeyR', <String>['r', 'R', '®', '‰'], 'R');
    verifyEntry(mapping, 'KeyS', <String>['s', 'S', 'ß', 'Í'], 'S');
    verifyEntry(mapping, 'KeyT', <String>['t', 'T', '†', 'ˇ'], 'T');
    verifyEntry(mapping, 'KeyU', <String>['u', 'U', 'Dead', '¨'], 'U');
    verifyEntry(mapping, 'KeyV', <String>['v', 'V', '√', '◊'], 'V');
    verifyEntry(mapping, 'KeyW', <String>['w', 'W', '∑', '„'], 'W');
    verifyEntry(mapping, 'KeyX', <String>['x', 'X', '≈', '˛'], 'X');
    verifyEntry(mapping, 'KeyY', <String>['y', 'Y', '¥', 'Á'], 'Y');
    verifyEntry(mapping, 'KeyZ', <String>['z', 'Z', 'Ω', '¸'], 'Z');
  });
}

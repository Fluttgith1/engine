# Copyright 2013 The Flutter Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("$flutter_root/common/config.gni")

_core_wrapper_includes = [
  "include/flutter/basic_message_channel.h",
  "include/flutter/binary_messenger.h",
  "include/flutter/engine_method_result.h",
  "include/flutter/json_message_codec.h",
  "include/flutter/json_method_codec.h",
  "include/flutter/json_type.h",
  "include/flutter/message_codec.h",
  "include/flutter/method_call.h",
  "include/flutter/method_channel.h",
  "include/flutter/method_codec.h",
  "include/flutter/method_result.h",
  "include/flutter/plugin_registrar.h",
]

# TODO: Once the wrapper API is more stable, consolidate to as few files as is
# reasonable (without forcing different kinds of clients to take unnecessary
# code) to simplify use.
_core_wrapper_sources = [
  "engine_method_result.cc",
  "json_message_codec.cc",
  "json_method_codec.cc",
  "plugin_registrar.cc",
]

_wrapper_publish_dir = "$root_out_dir/cpp_client_wrapper"

# Client library build for internal use by the shell implementation.
source_set("client_wrapper") {
  sources = _core_wrapper_sources
  public = _core_wrapper_includes

  deps = [
    "$flutter_root/shell/platform/cpp:common_cpp_library_headers",
    "//third_party/rapidjson",
  ]

  defines = [
    "FLUTTER_DESKTOP_LIBRARY",
    "USE_RAPID_JSON",
  ]
}

copy("_publish_includes") {
  sources = _core_wrapper_includes
  if (use_glfw_desktop) {
    sources +=
        [ "include/flutter/glfw/flutter_window_controller.h" ]
  }
  output_dir = "$_wrapper_publish_dir/include/flutter"
  outputs = [
    "$output_dir/{{source_file_part}}",
  ]
}

copy("_publish_sources") {
  sources = _core_wrapper_sources + [ "README" ]

  if (use_glfw_desktop) {
    sources += [ "glfw/flutter_window_controller.cc" ]
  }
  output_dir = "$_wrapper_publish_dir"
  outputs = [
    "$output_dir/{{source_file_part}}",
  ]
}

# Copies the client wrapper code to the output directory.
group("publish_wrapper") {
  deps = [
    ":_publish_includes",
    ":_publish_sources",
  ]
}

package io.flutter.embedding.android;

// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import java.util.HashMap;

public class KeyboardMap {
  public static final HashMap<Long, Long> scanCodeToPhysical = new HashMap<Long, Long>() {
    private static final long serialVersionUID = 1L;
    {
      put(0x00000000cdL, 0x0000000014L);    // suspend
      put(0x000000008eL, 0x0000010082L);    // sleep
      put(0x000000008fL, 0x0000010083L);    // wakeUp
      put(0x000000001eL, 0x0000070004L);    // keyA
      put(0x0000000030L, 0x0000070005L);    // keyB
      put(0x000000002eL, 0x0000070006L);    // keyC
      put(0x0000000020L, 0x0000070007L);    // keyD
      put(0x0000000012L, 0x0000070008L);    // keyE
      put(0x0000000021L, 0x0000070009L);    // keyF
      put(0x0000000022L, 0x000007000aL);    // keyG
      put(0x0000000023L, 0x000007000bL);    // keyH
      put(0x0000000017L, 0x000007000cL);    // keyI
      put(0x0000000024L, 0x000007000dL);    // keyJ
      put(0x0000000025L, 0x000007000eL);    // keyK
      put(0x0000000026L, 0x000007000fL);    // keyL
      put(0x0000000032L, 0x0000070010L);    // keyM
      put(0x0000000031L, 0x0000070011L);    // keyN
      put(0x0000000018L, 0x0000070012L);    // keyO
      put(0x0000000019L, 0x0000070013L);    // keyP
      put(0x0000000010L, 0x0000070014L);    // keyQ
      put(0x0000000013L, 0x0000070015L);    // keyR
      put(0x000000001fL, 0x0000070016L);    // keyS
      put(0x0000000014L, 0x0000070017L);    // keyT
      put(0x0000000016L, 0x0000070018L);    // keyU
      put(0x000000002fL, 0x0000070019L);    // keyV
      put(0x0000000011L, 0x000007001aL);    // keyW
      put(0x000000002dL, 0x000007001bL);    // keyX
      put(0x0000000015L, 0x000007001cL);    // keyY
      put(0x000000002cL, 0x000007001dL);    // keyZ
      put(0x0000000002L, 0x000007001eL);    // digit1
      put(0x0000000003L, 0x000007001fL);    // digit2
      put(0x0000000004L, 0x0000070020L);    // digit3
      put(0x0000000005L, 0x0000070021L);    // digit4
      put(0x0000000006L, 0x0000070022L);    // digit5
      put(0x0000000007L, 0x0000070023L);    // digit6
      put(0x0000000008L, 0x0000070024L);    // digit7
      put(0x0000000009L, 0x0000070025L);    // digit8
      put(0x000000000aL, 0x0000070026L);    // digit9
      put(0x000000000bL, 0x0000070027L);    // digit0
      put(0x000000001cL, 0x0000070028L);    // enter
      put(0x0000000001L, 0x0000070029L);    // escape
      put(0x000000000eL, 0x000007002aL);    // backspace
      put(0x000000000fL, 0x000007002bL);    // tab
      put(0x0000000039L, 0x000007002cL);    // space
      put(0x000000000cL, 0x000007002dL);    // minus
      put(0x000000000dL, 0x000007002eL);    // equal
      put(0x000000001aL, 0x000007002fL);    // bracketLeft
      put(0x000000001bL, 0x0000070030L);    // bracketRight
      put(0x000000002bL, 0x0000070031L);    // backslash
      put(0x0000000056L, 0x0000070031L);    // backslash
      put(0x0000000027L, 0x0000070033L);    // semicolon
      put(0x0000000028L, 0x0000070034L);    // quote
      put(0x0000000029L, 0x0000070035L);    // backquote
      put(0x0000000033L, 0x0000070036L);    // comma
      put(0x0000000034L, 0x0000070037L);    // period
      put(0x0000000035L, 0x0000070038L);    // slash
      put(0x000000003aL, 0x0000070039L);    // capsLock
      put(0x000000003bL, 0x000007003aL);    // f1
      put(0x000000003cL, 0x000007003bL);    // f2
      put(0x000000003dL, 0x000007003cL);    // f3
      put(0x000000003eL, 0x000007003dL);    // f4
      put(0x000000003fL, 0x000007003eL);    // f5
      put(0x0000000040L, 0x000007003fL);    // f6
      put(0x0000000041L, 0x0000070040L);    // f7
      put(0x0000000042L, 0x0000070041L);    // f8
      put(0x0000000043L, 0x0000070042L);    // f9
      put(0x0000000044L, 0x0000070043L);    // f10
      put(0x0000000057L, 0x0000070044L);    // f11
      put(0x0000000058L, 0x0000070045L);    // f12
      put(0x0000000063L, 0x0000070046L);    // printScreen
      put(0x0000000046L, 0x0000070047L);    // scrollLock
      put(0x0000000077L, 0x0000070048L);    // pause
      put(0x000000019bL, 0x0000070048L);    // pause
      put(0x000000006eL, 0x0000070049L);    // insert
      put(0x0000000066L, 0x000007004aL);    // home
      put(0x0000000068L, 0x000007004bL);    // pageUp
      put(0x00000000b1L, 0x000007004bL);    // pageUp
      put(0x000000006fL, 0x000007004cL);    // delete
      put(0x000000006bL, 0x000007004dL);    // end
      put(0x000000006dL, 0x000007004eL);    // pageDown
      put(0x00000000b2L, 0x000007004eL);    // pageDown
      put(0x000000006aL, 0x000007004fL);    // arrowRight
      put(0x0000000069L, 0x0000070050L);    // arrowLeft
      put(0x000000006cL, 0x0000070051L);    // arrowDown
      put(0x0000000067L, 0x0000070052L);    // arrowUp
      put(0x0000000045L, 0x0000070053L);    // numLock
      put(0x0000000062L, 0x0000070054L);    // numpadDivide
      put(0x0000000037L, 0x0000070055L);    // numpadMultiply
      put(0x000000004aL, 0x0000070056L);    // numpadSubtract
      put(0x000000004eL, 0x0000070057L);    // numpadAdd
      put(0x0000000060L, 0x0000070058L);    // numpadEnter
      put(0x000000004fL, 0x0000070059L);    // numpad1
      put(0x0000000050L, 0x000007005aL);    // numpad2
      put(0x0000000051L, 0x000007005bL);    // numpad3
      put(0x000000004bL, 0x000007005cL);    // numpad4
      put(0x000000004cL, 0x000007005dL);    // numpad5
      put(0x000000004dL, 0x000007005eL);    // numpad6
      put(0x0000000047L, 0x000007005fL);    // numpad7
      put(0x0000000048L, 0x0000070060L);    // numpad8
      put(0x0000000049L, 0x0000070061L);    // numpad9
      put(0x0000000052L, 0x0000070062L);    // numpad0
      put(0x0000000053L, 0x0000070063L);    // numpadDecimal
      put(0x000000007fL, 0x0000070065L);    // contextMenu
      put(0x000000008bL, 0x0000070065L);    // contextMenu
      put(0x0000000074L, 0x0000070066L);    // power
      put(0x0000000098L, 0x0000070066L);    // power
      put(0x0000000075L, 0x0000070067L);    // numpadEqual
      put(0x00000000b7L, 0x0000070068L);    // f13
      put(0x00000000b8L, 0x0000070069L);    // f14
      put(0x00000000b9L, 0x000007006aL);    // f15
      put(0x00000000baL, 0x000007006bL);    // f16
      put(0x00000000bbL, 0x000007006cL);    // f17
      put(0x00000000bcL, 0x000007006dL);    // f18
      put(0x00000000bdL, 0x000007006eL);    // f19
      put(0x00000000beL, 0x000007006fL);    // f20
      put(0x00000000bfL, 0x0000070070L);    // f21
      put(0x00000000c0L, 0x0000070071L);    // f22
      put(0x00000000c1L, 0x0000070072L);    // f23
      put(0x00000000c2L, 0x0000070073L);    // f24
      put(0x0000000086L, 0x0000070074L);    // open
      put(0x000000008aL, 0x0000070075L);    // help
      put(0x0000000161L, 0x0000070077L);    // select
      put(0x0000000081L, 0x0000070079L);    // again
      put(0x0000000083L, 0x000007007aL);    // undo
      put(0x0000000089L, 0x000007007bL);    // cut
      put(0x0000000085L, 0x000007007cL);    // copy
      put(0x0000000087L, 0x000007007dL);    // paste
      put(0x0000000088L, 0x000007007eL);    // find
      put(0x0000000071L, 0x000007007fL);    // audioVolumeMute
      put(0x0000000073L, 0x0000070080L);    // audioVolumeUp
      put(0x0000000072L, 0x0000070081L);    // audioVolumeDown
      put(0x000000005fL, 0x0000070085L);    // numpadComma
      put(0x0000000079L, 0x0000070085L);    // numpadComma
      put(0x000000005cL, 0x000007008aL);    // convert
      put(0x000000005eL, 0x000007008bL);    // nonConvert
      put(0x000000005aL, 0x0000070092L);    // lang3
      put(0x000000005bL, 0x0000070093L);    // lang4
      put(0x0000000082L, 0x00000700a3L);    // props
      put(0x00000000b3L, 0x00000700b6L);    // numpadParenLeft
      put(0x00000000b4L, 0x00000700b7L);    // numpadParenRight
      put(0x000000001dL, 0x00000700e0L);    // controlLeft
      put(0x000000002aL, 0x00000700e1L);    // shiftLeft
      put(0x0000000038L, 0x00000700e2L);    // altLeft
      put(0x000000007dL, 0x00000700e3L);    // metaLeft
      put(0x0000000061L, 0x00000700e4L);    // controlRight
      put(0x0000000036L, 0x00000700e5L);    // shiftRight
      put(0x0000000064L, 0x00000700e6L);    // altRight
      put(0x000000007eL, 0x00000700e7L);    // metaRight
      put(0x0000000166L, 0x00000c0060L);    // info
      put(0x0000000172L, 0x00000c0061L);    // closedCaptionToggle
      put(0x00000000e1L, 0x00000c006fL);    // brightnessUp
      put(0x00000000e0L, 0x00000c0070L);    // brightnessDown
      put(0x0000000195L, 0x00000c0083L);    // mediaLast
      put(0x00000000aeL, 0x00000c0094L);    // exit
      put(0x0000000192L, 0x00000c009cL);    // channelUp
      put(0x0000000193L, 0x00000c009dL);    // channelDown
      put(0x00000000c8L, 0x00000c00b0L);    // mediaPlay
      put(0x00000000cfL, 0x00000c00b0L);    // mediaPlay
      put(0x00000000c9L, 0x00000c00b1L);    // mediaPause
      put(0x00000000a7L, 0x00000c00b2L);    // mediaRecord
      put(0x00000000d0L, 0x00000c00b3L);    // mediaFastForward
      put(0x00000000a8L, 0x00000c00b4L);    // mediaRewind
      put(0x00000000a3L, 0x00000c00b5L);    // mediaTrackNext
      put(0x00000000a5L, 0x00000c00b6L);    // mediaTrackPrevious
      put(0x0000000080L, 0x00000c00b7L);    // mediaStop
      put(0x00000000a6L, 0x00000c00b7L);    // mediaStop
      put(0x00000000a1L, 0x00000c00b8L);    // eject
      put(0x00000000a2L, 0x00000c00b8L);    // eject
      put(0x00000000a4L, 0x00000c00cdL);    // mediaPlayPause
      put(0x00000000d1L, 0x00000c00e5L);    // bassBoost
      put(0x000000009bL, 0x00000c018aL);    // launchMail
      put(0x00000000d7L, 0x00000c018aL);    // launchMail
      put(0x00000001adL, 0x00000c018dL);    // launchContacts
      put(0x000000018dL, 0x00000c018eL);    // launchCalendar
      put(0x0000000247L, 0x00000c01cbL);    // launchAssistant
      put(0x00000000b5L, 0x00000c0201L);    // newKey
      put(0x00000000a0L, 0x00000c0203L);    // close
      put(0x00000000ceL, 0x00000c0203L);    // close
      put(0x00000000d2L, 0x00000c0208L);    // print
      put(0x00000000d9L, 0x00000c0221L);    // browserSearch
      put(0x000000009fL, 0x00000c0225L);    // browserForward
      put(0x000000009cL, 0x00000c022aL);    // browserFavorites
      put(0x00000000b6L, 0x00000c0279L);    // redo
      put(0x0000000100L, 0x000005ff01L);    // gameButton1
      put(0x0000000120L, 0x000005ff01L);    // gameButton1
      put(0x0000000101L, 0x000005ff02L);    // gameButton2
      put(0x0000000121L, 0x000005ff02L);    // gameButton2
      put(0x0000000102L, 0x000005ff03L);    // gameButton3
      put(0x0000000122L, 0x000005ff03L);    // gameButton3
      put(0x0000000103L, 0x000005ff04L);    // gameButton4
      put(0x0000000123L, 0x000005ff04L);    // gameButton4
      put(0x0000000104L, 0x000005ff05L);    // gameButton5
      put(0x0000000124L, 0x000005ff05L);    // gameButton5
      put(0x0000000105L, 0x000005ff06L);    // gameButton6
      put(0x0000000125L, 0x000005ff06L);    // gameButton6
      put(0x0000000106L, 0x000005ff07L);    // gameButton7
      put(0x0000000126L, 0x000005ff07L);    // gameButton7
      put(0x0000000107L, 0x000005ff08L);    // gameButton8
      put(0x0000000127L, 0x000005ff08L);    // gameButton8
      put(0x0000000108L, 0x000005ff09L);    // gameButton9
      put(0x0000000128L, 0x000005ff09L);    // gameButton9
      put(0x0000000109L, 0x000005ff0aL);    // gameButton10
      put(0x0000000129L, 0x000005ff0aL);    // gameButton10
      put(0x000000010aL, 0x000005ff0bL);    // gameButton11
      put(0x000000012aL, 0x000005ff0bL);    // gameButton11
      put(0x000000010bL, 0x000005ff0cL);    // gameButton12
      put(0x000000012bL, 0x000005ff0cL);    // gameButton12
      put(0x000000010cL, 0x000005ff0dL);    // gameButton13
      put(0x000000012cL, 0x000005ff0dL);    // gameButton13
      put(0x000000010dL, 0x000005ff0eL);    // gameButton14
      put(0x000000012dL, 0x000005ff0eL);    // gameButton14
      put(0x000000010eL, 0x000005ff0fL);    // gameButton15
      put(0x000000012eL, 0x000005ff0fL);    // gameButton15
      put(0x000000010fL, 0x000005ff10L);    // gameButton16
      put(0x000000012fL, 0x000005ff10L);    // gameButton16
      put(0x0000000130L, 0x000005ff11L);    // gameButtonA
      put(0x0000000131L, 0x000005ff12L);    // gameButtonB
      put(0x0000000132L, 0x000005ff13L);    // gameButtonC
      put(0x0000000136L, 0x000005ff14L);    // gameButtonLeft1
      put(0x0000000138L, 0x000005ff15L);    // gameButtonLeft2
      put(0x000000013cL, 0x000005ff16L);    // gameButtonMode
      put(0x0000000137L, 0x000005ff17L);    // gameButtonRight1
      put(0x0000000139L, 0x000005ff18L);    // gameButtonRight2
      put(0x000000013aL, 0x000005ff19L);    // gameButtonSelect
      put(0x000000013bL, 0x000005ff1aL);    // gameButtonStart
      put(0x000000013dL, 0x000005ff1bL);    // gameButtonThumbLeft
      put(0x000000013eL, 0x000005ff1cL);    // gameButtonThumbRight
      put(0x0000000133L, 0x000005ff1dL);    // gameButtonX
      put(0x0000000134L, 0x000005ff1eL);    // gameButtonY
      put(0x0000000135L, 0x000005ff1fL);    // gameButtonZ
      put(0x00000001d0L, 0x0000000012L);    // fn
    }
  };

  public static final HashMap<Long, Long> keyCodeToLogical  = new HashMap<Long, Long>() {
    private static final long serialVersionUID = 1L;
    {
      put(0x0000000000L, 0x0100000000L);    // none
      put(0x00000000dfL, 0x0100010082L);    // sleep
      put(0x00000000e0L, 0x0100010083L);    // wakeUp
      put(0x000000001dL, 0x0000000061L);    // keyA
      put(0x000000001eL, 0x0000000062L);    // keyB
      put(0x000000001fL, 0x0000000063L);    // keyC
      put(0x0000000020L, 0x0000000064L);    // keyD
      put(0x0000000021L, 0x0000000065L);    // keyE
      put(0x0000000022L, 0x0000000066L);    // keyF
      put(0x0000000023L, 0x0000000067L);    // keyG
      put(0x0000000024L, 0x0000000068L);    // keyH
      put(0x0000000025L, 0x0000000069L);    // keyI
      put(0x0000000026L, 0x000000006aL);    // keyJ
      put(0x0000000027L, 0x000000006bL);    // keyK
      put(0x0000000028L, 0x000000006cL);    // keyL
      put(0x0000000029L, 0x000000006dL);    // keyM
      put(0x000000002aL, 0x000000006eL);    // keyN
      put(0x000000002bL, 0x000000006fL);    // keyO
      put(0x000000002cL, 0x0000000070L);    // keyP
      put(0x000000002dL, 0x0000000071L);    // keyQ
      put(0x000000002eL, 0x0000000072L);    // keyR
      put(0x000000002fL, 0x0000000073L);    // keyS
      put(0x0000000030L, 0x0000000074L);    // keyT
      put(0x0000000031L, 0x0000000075L);    // keyU
      put(0x0000000032L, 0x0000000076L);    // keyV
      put(0x0000000033L, 0x0000000077L);    // keyW
      put(0x0000000034L, 0x0000000078L);    // keyX
      put(0x0000000035L, 0x0000000079L);    // keyY
      put(0x0000000036L, 0x000000007aL);    // keyZ
      put(0x0000000008L, 0x0000000031L);    // digit1
      put(0x0000000009L, 0x0000000032L);    // digit2
      put(0x000000000aL, 0x0000000033L);    // digit3
      put(0x000000000bL, 0x0000000034L);    // digit4
      put(0x000000000cL, 0x0000000035L);    // digit5
      put(0x000000000dL, 0x0000000036L);    // digit6
      put(0x000000000eL, 0x0000000037L);    // digit7
      put(0x000000000fL, 0x0000000038L);    // digit8
      put(0x0000000010L, 0x0000000039L);    // digit9
      put(0x0000000007L, 0x0000000030L);    // digit0
      put(0x0000000042L, 0x0100070028L);    // enter
      put(0x000000006fL, 0x0100070029L);    // escape
      put(0x0000000043L, 0x010007002aL);    // backspace
      put(0x000000003dL, 0x010007002bL);    // tab
      put(0x000000003eL, 0x0000000020L);    // space
      put(0x0000000045L, 0x000000002dL);    // minus
      put(0x0000000046L, 0x000000003dL);    // equal
      put(0x0000000047L, 0x000000005bL);    // bracketLeft
      put(0x0000000048L, 0x000000005dL);    // bracketRight
      put(0x0000000049L, 0x000000005cL);    // backslash
      put(0x000000004aL, 0x000000003bL);    // semicolon
      put(0x000000004bL, 0x0000000027L);    // quote
      put(0x0000000044L, 0x0000000060L);    // backquote
      put(0x0000000037L, 0x000000002cL);    // comma
      put(0x0000000038L, 0x000000002eL);    // period
      put(0x000000004cL, 0x000000002fL);    // slash
      put(0x0000000073L, 0x0100070039L);    // capsLock
      put(0x0000000083L, 0x010007003aL);    // f1
      put(0x0000000084L, 0x010007003bL);    // f2
      put(0x0000000085L, 0x010007003cL);    // f3
      put(0x0000000086L, 0x010007003dL);    // f4
      put(0x0000000087L, 0x010007003eL);    // f5
      put(0x0000000088L, 0x010007003fL);    // f6
      put(0x0000000089L, 0x0100070040L);    // f7
      put(0x000000008aL, 0x0100070041L);    // f8
      put(0x000000008bL, 0x0100070042L);    // f9
      put(0x000000008cL, 0x0100070043L);    // f10
      put(0x000000008dL, 0x0100070044L);    // f11
      put(0x000000008eL, 0x0100070045L);    // f12
      put(0x0000000078L, 0x0100070046L);    // printScreen
      put(0x0000000074L, 0x0100070047L);    // scrollLock
      put(0x0000000079L, 0x0100070048L);    // pause
      put(0x000000007cL, 0x0100070049L);    // insert
      put(0x000000007aL, 0x010007004aL);    // home
      put(0x000000005cL, 0x010007004bL);    // pageUp
      put(0x0000000070L, 0x010007004cL);    // delete
      put(0x000000007bL, 0x010007004dL);    // end
      put(0x000000005dL, 0x010007004eL);    // pageDown
      put(0x0000000016L, 0x010007004fL);    // arrowRight
      put(0x0000000015L, 0x0100070050L);    // arrowLeft
      put(0x0000000014L, 0x0100070051L);    // arrowDown
      put(0x0000000013L, 0x0100070052L);    // arrowUp
      put(0x000000008fL, 0x0100070053L);    // numLock
      put(0x000000009aL, 0x0100070054L);    // numpadDivide
      put(0x000000009bL, 0x0100070055L);    // numpadMultiply
      put(0x000000009cL, 0x0100070056L);    // numpadSubtract
      put(0x000000009dL, 0x0100070057L);    // numpadAdd
      put(0x00000000a0L, 0x0100070058L);    // numpadEnter
      put(0x0000000091L, 0x0100070059L);    // numpad1
      put(0x0000000092L, 0x010007005aL);    // numpad2
      put(0x0000000093L, 0x010007005bL);    // numpad3
      put(0x0000000094L, 0x010007005cL);    // numpad4
      put(0x0000000095L, 0x010007005dL);    // numpad5
      put(0x0000000096L, 0x010007005eL);    // numpad6
      put(0x0000000097L, 0x010007005fL);    // numpad7
      put(0x0000000098L, 0x0100070060L);    // numpad8
      put(0x0000000099L, 0x0100070061L);    // numpad9
      put(0x0000000090L, 0x0100070062L);    // numpad0
      put(0x000000009eL, 0x0100070063L);    // numpadDecimal
      put(0x0000000052L, 0x0100070065L);    // contextMenu
      put(0x000000001aL, 0x0100070066L);    // power
      put(0x00000000a1L, 0x0100070067L);    // numpadEqual
      put(0x0000000103L, 0x0100070075L);    // help
      put(0x0000000017L, 0x0100070077L);    // select
      put(0x0000000115L, 0x010007007bL);    // cut
      put(0x0000000116L, 0x010007007cL);    // copy
      put(0x0000000117L, 0x010007007dL);    // paste
      put(0x00000000a4L, 0x010007007fL);    // audioVolumeMute
      put(0x0000000018L, 0x0100070080L);    // audioVolumeUp
      put(0x0000000019L, 0x0100070081L);    // audioVolumeDown
      put(0x000000009fL, 0x0100070085L);    // numpadComma
      put(0x00000000d6L, 0x010007008aL);    // convert
      put(0x00000000d5L, 0x010007008bL);    // nonConvert
      put(0x00000000a2L, 0x01000700b6L);    // numpadParenLeft
      put(0x00000000a3L, 0x01000700b7L);    // numpadParenRight
      put(0x0000000071L, 0x01000700e0L);    // controlLeft
      put(0x000000003bL, 0x01000700e1L);    // shiftLeft
      put(0x0000000039L, 0x01000700e2L);    // altLeft
      put(0x0000000075L, 0x01000700e3L);    // metaLeft
      put(0x0000000072L, 0x01000700e4L);    // controlRight
      put(0x000000003cL, 0x01000700e5L);    // shiftRight
      put(0x000000003aL, 0x01000700e6L);    // altRight
      put(0x0000000076L, 0x01000700e7L);    // metaRight
      put(0x00000000a5L, 0x01000c0060L);    // info
      put(0x00000000afL, 0x01000c0061L);    // closedCaptionToggle
      put(0x00000000ddL, 0x01000c006fL);    // brightnessUp
      put(0x00000000dcL, 0x01000c0070L);    // brightnessDown
      put(0x00000000e5L, 0x01000c0083L);    // mediaLast
      put(0x00000000a6L, 0x01000c009cL);    // channelUp
      put(0x00000000a7L, 0x01000c009dL);    // channelDown
      put(0x000000007eL, 0x01000c00b0L);    // mediaPlay
      put(0x000000007fL, 0x01000c00b1L);    // mediaPause
      put(0x0000000082L, 0x01000c00b2L);    // mediaRecord
      put(0x000000005aL, 0x01000c00b3L);    // mediaFastForward
      put(0x0000000059L, 0x01000c00b4L);    // mediaRewind
      put(0x0000000057L, 0x01000c00b5L);    // mediaTrackNext
      put(0x0000000058L, 0x01000c00b6L);    // mediaTrackPrevious
      put(0x0000000056L, 0x01000c00b7L);    // mediaStop
      put(0x0000000081L, 0x01000c00b8L);    // eject
      put(0x0000000055L, 0x01000c00cdL);    // mediaPlayPause
      put(0x0000000041L, 0x01000c018aL);    // launchMail
      put(0x00000000cfL, 0x01000c018dL);    // launchContacts
      put(0x00000000d0L, 0x01000c018eL);    // launchCalendar
      put(0x00000000dbL, 0x01000c01cbL);    // launchAssistant
      put(0x0000000080L, 0x01000c0203L);    // close
      put(0x0000000054L, 0x01000c0221L);    // browserSearch
      put(0x000000007dL, 0x01000c0225L);    // browserForward
      put(0x00000000aeL, 0x01000c022aL);    // browserFavorites
      put(0x00000000a8L, 0x01000c022dL);    // zoomIn
      put(0x00000000a9L, 0x01000c022eL);    // zoomOut
      put(0x00000000ffL, 0x01000c0232L);    // zoomToggle
      put(0x00000000bcL, 0x010005ff01L);    // gameButton1
      put(0x00000000bdL, 0x010005ff02L);    // gameButton2
      put(0x00000000beL, 0x010005ff03L);    // gameButton3
      put(0x00000000bfL, 0x010005ff04L);    // gameButton4
      put(0x00000000c0L, 0x010005ff05L);    // gameButton5
      put(0x00000000c1L, 0x010005ff06L);    // gameButton6
      put(0x00000000c2L, 0x010005ff07L);    // gameButton7
      put(0x00000000c3L, 0x010005ff08L);    // gameButton8
      put(0x00000000c4L, 0x010005ff09L);    // gameButton9
      put(0x00000000c5L, 0x010005ff0aL);    // gameButton10
      put(0x00000000c6L, 0x010005ff0bL);    // gameButton11
      put(0x00000000c7L, 0x010005ff0cL);    // gameButton12
      put(0x00000000c8L, 0x010005ff0dL);    // gameButton13
      put(0x00000000c9L, 0x010005ff0eL);    // gameButton14
      put(0x00000000caL, 0x010005ff0fL);    // gameButton15
      put(0x00000000cbL, 0x010005ff10L);    // gameButton16
      put(0x0000000060L, 0x010005ff11L);    // gameButtonA
      put(0x0000000061L, 0x010005ff12L);    // gameButtonB
      put(0x0000000062L, 0x010005ff13L);    // gameButtonC
      put(0x0000000066L, 0x010005ff14L);    // gameButtonLeft1
      put(0x0000000068L, 0x010005ff15L);    // gameButtonLeft2
      put(0x000000006eL, 0x010005ff16L);    // gameButtonMode
      put(0x0000000067L, 0x010005ff17L);    // gameButtonRight1
      put(0x0000000069L, 0x010005ff18L);    // gameButtonRight2
      put(0x000000006dL, 0x010005ff19L);    // gameButtonSelect
      put(0x000000006cL, 0x010005ff1aL);    // gameButtonStart
      put(0x000000006aL, 0x010005ff1bL);    // gameButtonThumbLeft
      put(0x000000006bL, 0x010005ff1cL);    // gameButtonThumbRight
      put(0x0000000063L, 0x010005ff1dL);    // gameButtonX
      put(0x0000000064L, 0x010005ff1eL);    // gameButtonY
      put(0x0000000065L, 0x010005ff1fL);    // gameButtonZ
      put(0x0000000077L, 0x0100000012L);    // fn
    }
  };
}

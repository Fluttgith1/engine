# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

assert(is_fuchsia && is_fuchsia_sdk)

import("$flutter_root/build/fuchsia/fuchsia.gni")

# fuchsia_sysroot("sysroot") {
#   meta = "//fuchsia/sdk/pkg/sysroot/meta.json"
#   # arch = "x64"
# }

# fuchsia_cc_source_library("zx") {
#   meta = "//fuchsia/sdk/pkg/zx/meta.json"
# }

# fuchsia_cc_source_library("scenic_cpp") {
#   meta = "//fuchsia/sdk/pkg/scenic_cpp/meta.json"
# }

# fuchsia_fidl_library("images") {
#   meta = "//fuchsia/sdk/fidl/fuchsia.images/meta.json"
# }

fuchsia_sdk("sdk") {
  meta = "//fuchsia/sdk/meta/manifest.json"
}

executable("fuchsia") {
  sources = [
    "sample_main.cc",
  ]

  deps = [
    ":sdk",

    # ":images",
    # ":scenic_cpp",
    # ":sysroot",
    ":sysroot",
    ":zx",

    # "$flutter_root/common",
    # "$flutter_root/flow",
    # "$flutter_root/runtime:libdart",
  ]
}

# executable("fuchsia") {
#   include_dirs = [ "$flutter_root" ]

#   sources = [
#     "component.cc",
#     "component.h",
#     "compositor_context.cc",
#     "compositor_context.h",
#     "context_writer_bridge.cc",
#     "context_writer_bridge.h",
#     "engine.cc",
#     "engine.h",
#     "fuchsia_font_manager.cc",
#     "fuchsia_font_manager.h",
#     "isolate_configurator.cc",
#     "isolate_configurator.h",
#     "logging.h",
#     "loop.cc",
#     "loop.h",
#     "main.cc",
#     "platform_view.cc",
#     "platform_view.h",
#     "runner.cc",
#     "runner.h",
#     "runner_context.cc",
#     "runner_context.h",
#     "service_provider_dir.cc",
#     "service_provider_dir.h",
#     "session_connection.cc",
#     "session_connection.h",
#     "surface.cc",
#     "surface.h",
#     "task_observers.cc",
#     "task_observers.h",
#     "task_runner_adapter.cc",
#     "task_runner_adapter.h",
#     "thread.cc",
#     "thread.h",
#     "unique_fdio_ns.h",
#     "vsync_recorder.cc",
#     "vsync_recorder.h",
#     "vsync_waiter.cc",
#     "vsync_waiter.h",
#     "vulkan_surface.cc",
#     "vulkan_surface.h",
#     "vulkan_surface_pool.cc",
#     "vulkan_surface_pool.h",
#     "vulkan_surface_producer.cc",
#     "vulkan_surface_producer.h",
#   ]

#   deps = [
#     "$flutter_root/common",
#     "$flutter_root/flow",
#     "$flutter_root/lib/ui",
#     "$flutter_root/runtime:libdart",
#     "$flutter_root/shell/common",
#     "$flutter_root/vulkan",
#     "//third_party/skia",
#   ]
# }

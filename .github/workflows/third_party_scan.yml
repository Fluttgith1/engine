name: Third party deps scan
on:
  # Only the default branch is supported.
  branch_protection_rule:
  push:
    branches: [ main ]
  pull_request:
    types: [ labeled ]

# Declare default permissions as read only.
permissions: read-all

jobs:
  extract-deps:
    name: Extract Dependencies
    runs-on: ubuntu-20.04
    # if: ${{  github.repository == 'flutter/engine' && (github.event_name == 'push' || github.event.label.name == 'vulnerability scan') }}
    permissions:
      # Needed to upload the SARIF results to code-scanning dashboard.
      security-events: write
      contents: read
    steps:
      - name: "Checkout code"
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          persist-credentials: false
      - name: "setup python"
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236
        with:
          python-version: '3.7.7' # install the python version needed
      - name: "extract, flatten, and convert to osv-scanner deps"
        run: python ci/deps_parser.py -o osv-scanner-deps.json
      # TODO: This does not use the get_common_ancestor_commit method in scan_flattened_deps.py yet
      - name: "upload osv-scanner deps"
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32
        with:
          name: converted-OSV-Scanner-deps
          path: osv-scanner-deps.json
          retention-days: 2
  vuln-scan:
    name: Vulnerability scanning
    uses: "google/osv-scanner/.github/workflows/osv-scanner-reusable.yml@main"
    with:
      # Download the artifact uploaded in extract-deps step
      download-artifact: converted-OSV-Scanner-deps
      scan-args: |-
        --lockfile=osv-scanner:osv-scanner-deps.json
    # makes sure the osv-formatted vulns are uploaded
    needs:
      extract-deps
    permissions:
      # Needed to upload the SARIF results to code-scanning dashboard.
      security-events: write
      contents: read
